{"version":3,"sources":["theme/theme.js","theme/global.js","theme/useDarkMode.js","components/Badge.js","components/DarkModeToggle.js","App.js","index.js"],"names":["lightTheme","fonts","primary","main","color","background","selection","button","default","hover","focus","borderColor","badge","input","checkbox","tickColor","checkBorderColor","checkBackground","checked","darkTheme","_objectSpread","createGlobalStyle","_templateObject","_taggedTemplateLiteral","_ref","theme","_ref2","text","_ref3","_ref4","useDarkMode","_useState","useState","_useState2","_slicedToArray","setTheme","_useState3","_useState4","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","matchMedia","matches","Style","styled","div","fixed","Badge","_ref5","children","React","createElement","sunGradient","Ellipse","Dot","span","_templateObject2","iconSize","dotSize","index","isLight","concat","rotateValue","Dots","_templateObject3","_templateObject4","_ref6","DarkModeToggle","_ref7","toggleTheme","rotateValues","setRotateValues","randomValues","key","Object","keys","_toConsumableArray","Array","push","Math","floor","random","onClick","map","dot","Page","App","_useDarkMode","_useDarkMode2","themeMode","ThemeProvider","Normalize","GlobalStyles","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f9881ec4.chunk.js","sourcesContent":["export const lightTheme = {\n  fonts: {\n    primary: '\"Mada\", sans-serif'\n  },\n  main: {\n    color: '#333333',\n    background: '#eeeeee',\n    selection: 'rgba(0, 0, 0, 0.1)'\n  },\n  button: {\n    default: {\n      color: '#333333',\n      background: '#ffffff'\n    },\n    hover: {\n      background: '#eeeeee'\n    },\n    focus: {\n      borderColor: '#eeeeee'\n    }\n  },\n  badge: {\n    color: '#333333',\n    background: '#ffffff',\n    borderColor: '#ffffff'\n  },\n  input: {\n    default: {\n      color: '#333333',\n      background: '#fafafa',\n      borderColor: '#eeeeee'\n    },\n    hover: {\n      background: '#fafafa',\n      borderColor: '#cccccc'\n    },\n    focus: {\n      background: '#ffffff',\n      borderColor: '#222222'\n    }\n  },\n  checkbox: {\n    default: {\n      color: '#333333',\n      tickColor: '#ffffff',\n      checkBorderColor: '#eeeeee',\n      checkBackground: '#ffffff'\n    },\n    hover: {\n      color: '#999999',\n      background: '#eeeeee',\n      checkBorderColor: '#cccccc'\n    },\n    checked: {\n      background: '#eeeeee',\n      checkBorderColor: '#333333',\n      checkBackground: '#333333'\n    }\n  }\n};\n\nexport const darkTheme = {\n  ...lightTheme,\n  main: {\n    color: '#999999',\n    background: '#161616',\n    selection: 'rgba(0, 0, 0, 0.1)'\n  },\n  button: {\n    default: {\n      color: '#999999',\n      background: '#1b1b1b'\n    },\n    hover: {\n      background: '#232323'\n    },\n    focus: {\n      borderColor: '#1b1b1b'\n    }\n  },\n  badge: {\n    color: '#dddddd',\n    background: '#222222',\n    borderColor: '#222222'\n  },\n  input: {\n    default: {\n      color: '#dddddd',\n      background: '#1b1b1b',\n      borderColor: '#333333'\n    },\n    hover: {\n      background: '#1b1b1b',\n      borderColor: '#555555'\n    },\n    focus: {\n      background: '#161616',\n      borderColor: '#dddddd'\n    }\n  },\n  checkbox: {\n    default: {\n      color: '#dddddd',\n      tickColor: '#ffffff',\n      checkBorderColor: '#333333',\n      checkBackground: '#1b1b1b'\n    },\n    hover: {\n      color: '#eeeeee',\n      background: '#222222',\n      checkBorderColor: '#444444'\n    },\n    checked: {\n      color: '#ffffff',\n      background: '#222222',\n      tickColor: '#333333',\n      checkBorderColor: '#eeeeee',\n      checkBackground: '#eeeeee'\n    }\n  }\n};\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  html {\n    height: -webkit-fill-available;\n  }\n\n  #root,\n  body {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 100vh;\n    min-height: -webkit-fill-available; /* mobile viewport bug fix */\n    height: 100%;\n  }\n\n  body {\n    font-family: ${({ theme }) => theme.fonts.primary};\n    font-size: 100%;\n    line-height: 1.5;\n    color: ${({ theme }) => theme.main.text};\n    background-color: ${({ theme }) => theme.main.background};\n    overflow-y: auto;\n    overflow-x: auto;\n    scroll-behavior: smooth;\n    transition: all 0.45s ease;\n  }\n\n  ::selection {\n    background-color: ${({ theme }) => theme.main.selection};\n  }\n\n  button {\n    padding: 0;\n    border: 0;\n    outline: none;\n    background: none;\n    -webkit-appearance: none;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n  }\n`;\n","// https://css-tricks.com/a-dark-mode-toggle-with-react-and-themeprovider/#the-usedarkmode-hook\nimport { useEffect, useState } from 'react';\n\nconst useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setMode = (mode) => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches &&\n    !localTheme\n      ? setMode('dark')\n      : localTheme\n      ? setTheme(localTheme)\n      : setMode('light');\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, toggleTheme, componentMounted];\n};\n\nexport default useDarkMode;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Style = styled.div`\n  display: inline-block;\n  padding: 4px 8px;\n  font-size: 0.815em;\n  font-weight: 700;\n  line-height: 1.25;\n  letter-spacing: 0.025em;\n  color: ${({ theme }) => theme.badge.color};\n  background: ${({ theme }) => theme.badge.background};\n  border: 2px solid ${({ theme }) => theme.badge.borderColor};\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n  border-radius: 4px;\n  user-select: none;\n  cursor: default;\n  transition: all 0.45s ease;\n\n  ${({ fixed }) =>\n    fixed &&\n    `\n    z-index: 10000;\n    position: fixed;\n    top: 12px;\n    left: 12px;\n  `};\n`;\n\nconst Badge = ({ children, fixed }) => <Style fixed={fixed}>{children}</Style>;\n\nexport default Badge;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst numberOfDots = 8;\nconst dotSize = 4;\nconst iconSize = 20;\nconst sunGradient =\n  'linear-gradient(15deg, #ce5f10 4%, #ef7308 10%, #efa108 40%, #fbd7a5 72%, #ffecc8 100%)';\nconst moonGradient =\n  'linear-gradient(35deg, #4e37c7 0%, #5841d0 10%, #5841d0 20%, #5841d0 28%, #93cdff 82%, #93cdff 100%)';\n\nconst Ellipse = styled.div`\n  position: relative;\n  height: ${iconSize}px;\n  width: ${iconSize}px;\n  color: ${({ theme }) => theme.main.text};\n  background: ${moonGradient};\n  border-radius: 50%;\n  transition: all 0.45s ease;\n\n  /* Create a fake mask for the crescent moon */\n  &::before {\n    content: '';\n    z-index: 200;\n    position: absolute;\n    top: -2px;\n    right: -2px;\n    width: 80%;\n    height: 80%;\n    background: ${({ theme }) => theme.main.background};\n    border-radius: 50%;\n    transform: translate(0, 0);\n    transition: all 0.45s ease;\n  }\n`;\n\n/* Wrapper the dot and rotate it around the ellipse */\nconst Dot = styled.span`\n  z-index: 100000;\n  position: absolute;\n  top: -${iconSize / 2}px;\n  left: ${iconSize / 2 - dotSize / 2}px;\n  display: block;\n  height: ${iconSize * 2}px;\n  width: ${dotSize}px;\n  pointer-events: none;\n  transition: all 0.45s ease;\n\n  /* Create tiny dot for stars & sun dots */\n  &::before {\n    content: '';\n    position: absolute;\n    top: 2px;\n    left: 0;\n    display: flex;\n    align-items: center;\n    width: ${dotSize / 2}px;\n    height: ${dotSize / 2}px;\n    border-radius: 4px;\n    background: #93cdff;\n    background: linear-gradient(25deg, #8d77ff, #93cdff);\n    transform: translateY(1px);\n    transition: all 0.45s ease;\n  }\n\n  ${({ index, isLight }) =>\n    index &&\n    isLight &&\n    `\n    /* Sunshine position & scale for light mode */\n    opacity: 1 !important;\n    transform: rotate(${(360 / numberOfDots) * index}deg);\n\n    &::before {\n      width: ${dotSize}px;\n      height: ${dotSize}px;\n      background: ${sunGradient};\n      transform: rotate(-${(360 / numberOfDots) * index}deg);\n    }\n  `};\n\n  ${({ index, isLight, rotateValue }) =>\n    index &&\n    !isLight &&\n    rotateValue &&\n    `\n    /* Stars random rotate for dark mode */\n    transform: rotate(${\n      rotateValue / numberOfDots + index\n    }deg) translateY(${-index}px);\n  `};\n`;\n\nconst Dots = styled.div`\n  > span {\n    opacity: 0.4;\n  }\n`;\n\nconst Style = styled.button`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 0.815em;\n  background: ${({ theme }) => theme.main.background};\n  cursor: pointer;\n  border-radius: 1000px;\n  transition: all 0.45s ease;\n\n  ${({ isLight }) =>\n    isLight &&\n    `\n    ${Ellipse} {\n      background: ${sunGradient};\n\n      &::before {\n        transform: translate(100%, -100%);\n      }\n    }\n  `};\n`;\n\nconst DarkModeToggle = ({ theme, toggleTheme }) => {\n  const isLight = theme === 'light';\n  const [rotateValues, setRotateValues] = useState([]);\n\n  useEffect(() => {\n    const randomValues = [];\n\n    for (const key in Object.keys([...Array(numberOfDots)])) {\n      randomValues.push(Math.floor(Math.random() * 360) + key);\n    }\n    setRotateValues(randomValues);\n  }, []);\n\n  return (\n    <Style isLight={isLight} onClick={toggleTheme}>\n      <Ellipse>\n        <Dots isLight={isLight}>\n          {Object.keys([...Array(numberOfDots)]).map((dot, index) => (\n            <Dot\n              key={dot}\n              index={index + 1}\n              isLight={isLight}\n              rotateValue={rotateValues[index]}\n            />\n          ))}\n        </Dots>\n      </Ellipse>\n    </Style>\n  );\n};\n\nexport default DarkModeToggle;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { Normalize } from 'styled-normalize';\nimport { lightTheme, darkTheme } from './theme/theme';\nimport GlobalStyles from './theme/global';\nimport useDarkMode from './theme/useDarkMode';\nimport Badge from './components/Badge';\nimport DarkModeToggle from './components/DarkModeToggle';\n\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  font-family: ${({ theme }) => theme.fonts.primary};\n\n  * {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nexport default function App() {\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <Normalize />\n      <GlobalStyles />\n      <Page>\n        <Badge fixed>Dark Mode Toggle</Badge>\n        <DarkModeToggle theme={theme} toggleTheme={toggleTheme} />\n      </Page>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Normalize } from 'styled-normalize';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <React.StrictMode>\n    <Normalize />\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}